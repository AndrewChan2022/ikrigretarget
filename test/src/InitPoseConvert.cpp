//
//  InitPoseConvert.cpp
//
//
//  Created by kai chen on 3/24/23.
//
#include "InitPoseConvert.h"
#include "FBXRW.h"

using namespace SoulIK;

SoulPose SoulIK::getMetaTPoseSoulPose(SoulSkeleton& sk) {

    struct PoseItem {
        glm::vec3 t;
        glm::vec3 s;
        glm::quat q;
    };
    std::unordered_map<std::string, PoseItem> posedict = {
        //{"Rol01_Torso01HipCtrlJnt_M", {{0.000000, -11.151259, 692.766296}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Torso01HipCtrlJnt_M", {{0.000000, 692.766296, -11.151259}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Torso01HipCtrlJnt_M_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Torso0101Jnt_M", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {-0.018845, 0.706856, 0.706856, 0.018845}}},
        {"Torso0101Jnt_M_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Torso0102Jnt_M", {{34.375542, -0.000000, 0.383953}, {1.000000, 1.000000, 1.000000}, {0.999944, 0.000000, -0.010605, 0.000000}}},
        {"Torso0102Jnt_M_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Torso0103Jnt_M", {{34.376987, -0.000000, 0.267512}, {1.000000, 1.000000, 1.000000}, {0.999974, 0.000000, -0.007215, 0.000000}}},
        {"Torso0103Jnt_M_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Torso0104Jnt_M", {{34.377270, -0.000000, 0.228687}, {1.000000, 1.000000, 1.000000}, {0.999974, 0.000000, -0.007220, 0.000000}}},
        {"Torso0104Jnt_M_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Torso0105Jnt_M", {{34.375942, -0.000000, 0.345904}, {1.000000, 1.000000, 1.000000}, {0.999943, 0.000000, -0.010631, 0.000000}}},
        {"Torso0105Jnt_M_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Leg01Up01Jnt_L", {{-70.755814, 65.134995, 6.021814}, {1.000000, 1.000000, 1.000000}, {-0.006912, -0.006912, -0.707073, 0.707073}}},
        {"Leg01Up01Jnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, -0.000000}}},
        {"Rol01_Leg01Up02Jnt_L", {{139.477142, -0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Leg01Up02Jnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Leg01Up03Jnt_L", {{139.477142, -0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Leg01Up03Jnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Leg01Low01Jnt_L", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {0.999703, 0.000000, 0.000000, -0.024377}}},
        {"Leg01Low01Jnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Leg01Low02Jnt_L", {{126.577507, -0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Leg01Low02Jnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Leg01Low03Jnt_L", {{126.577507, -0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Leg01Low03Jnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Leg01AnkleJnt_L", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {0.706506, -0.706506, -0.029137, 0.029137}}},
        {"Rol01_Leg01FootJnt_L", {{64.388062, 10.310209, 112.016861}, {1.000000, 1.000000, 1.000000}, {0.706362, -0.032439, -0.706362, 0.032439}}},
        {"Rol01_Neck0101Jnt_M", {{130.601349, 0.000000, 29.095982}, {1.000000, 1.000000, 1.000000}, {0.996415, -0.000000, 0.084602, 0.000000}}},
        {"Neck0101Jnt_M_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Neck0102Jnt_M", {{27.701897, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Neck0102Jnt_M_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Neck0103Jnt_M", {{27.701897, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Head_M", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {0.053466, 0.705083, 0.705083, 0.053466}}},
        {"Neck0103Jnt_M_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {-0.053466, 0.705082, 0.705083, 0.053466}}},
        {"Eye_L", {{37.007999, 78.077209, 51.198513}, {1.000000, 1.000000, 1.000000}, {0.995089, 0.047223, 0.086901, -0.004124}}},
        {"Rol01_Arm01ClavicleStartJnt_L", {{100.361694, 11.303822, -14.647395}, {1.000000, 1.000000, 1.000000}, {-0.176047, 0.618006, 0.740107, 0.198288}}},
        {"Rol01_Arm01Up01Jnt_L", {{87.926872, -0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {0.654214, 0.707379, -0.096248, 0.249711}}},
        {"Arm01Up01Jnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, -0.000000, -0.000000, 0.000000}}},
        {"Rol01_Arm01Up02Jnt_L", {{89.262054, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Arm01Up02Jnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Arm01Up03Jnt_L", {{89.262054, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Arm01Up03Jnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Arm01Low01Jnt_L", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {0.991170, -0.003312, 0.025363, 0.130109}}},
        {"Arm01Low01Jnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, -0.000000}}},
        {"Rol01_Arm01Low02Jnt_L", {{79.556503, -0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, -0.000079, 0.000000, 0.000000}}},
        {"Arm01Low02Jnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Arm01Low03Jnt_L", {{79.556503, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, -0.000079, 0.000000, 0.000000}}},
        {"Arm01Low03Jnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Arm01ClavicleStartJnt_L_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Arm01ClavicleStartJnt_R", {{100.361694, -11.303822, -14.647395}, {1.000000, 1.000000, 1.000000}, {0.198288, 0.740107, 0.618006, -0.176047}}},
        {"Rol01_Arm01Up01Jnt_R", {{-87.926872, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {0.712401, -0.652079, 0.235001, 0.109783}}},
        {"Arm01Up01Jnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Arm01Up02Jnt_R", {{-89.262054, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Arm01Up02Jnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Arm01ClavicleStartJnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, -0.000000, -0.000000, -0.000000}}},
        {"Rol01_Arm01Up03Jnt_R", {{-89.262054, -0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Arm01Low01Jnt_R", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {0.991070, -0.003791, 0.029015, 0.130096}}},
        {"Rol01_Arm01Low02Jnt_R", {{-79.556503, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, -0.000079, 0.000000, 0.000000}}},
        {"Arm01Low02Jnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Arm01Up03Jnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Arm01Low01Jnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, -0.000000}}},
        {"Rol01_Arm01Low03Jnt_R", {{-79.556503, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, -0.000079, 0.000000, 0.000000}}},
        {"Arm01Low03Jnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Leg01Up01Jnt_R", {{-70.755814, -65.134995, 6.021814}, {1.000000, 1.000000, 1.000000}, {0.707073, 0.707073, -0.006912, 0.006912}}},
        {"Rol01_Leg01Up02Jnt_R", {{-139.477142, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Leg01Up03Jnt_R", {{-139.477142, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Leg01Low01Jnt_R", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {0.999703, 0.000000, 0.000000, -0.024377}}},
        {"Rol01_Leg01Low02Jnt_R", {{-126.577507, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Leg01Low02Jnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Leg01Low03Jnt_R", {{-126.577507, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Leg01AnkleJnt_R", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {0.706506, 0.706506, 0.029137, 0.029137}}},
        {"Leg01Low01Jnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Leg01Up01Jnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, -0.000000, 0.000000, -0.000000}}},
        {"Leg01Up02Jnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Leg01Up03Jnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Leg01Low03Jnt_R_Scale", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Leg01FootJnt_R", {{-64.388062, 10.310209, 112.016861}, {1.000000, 1.000000, 1.000000}, {0.706362, -0.032439, 0.706362, -0.032439}}},
        {"Rol01_Hand01MasterJnt_R", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {0.706517, 0.696987, -0.119843, -0.026085}}},
        {"Rol01_Hand01Thumb01FKCtrlJnt_R", {{-16.920595, -5.850204, 25.255711}, {1.000000, 1.000000, 1.000000}, {-0.401013, 0.826006, -0.090787, -0.385566}}},
        {"Rol01_Hand01Thumb02FKCtrlJnt_R", {{-20.364660, -0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {0.995840, -0.030879, 0.035645, -0.077959}}},
        {"Rol01_Hand01Thumb03FKCtrlJnt_R", {{-24.680334, -0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Little02FKCtrlJnt_R", {{-58.057373, -2.451173, -20.710228}, {1.000000, 1.000000, 1.000000}, {0.127064, 0.991454, -0.027657, -0.010459}}},
        {"Rol01_Hand01Little03FKCtrlJnt_R", {{-20.926340, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Little04FKCtrlJnt_R", {{-18.014015, -0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {0.999347, 0.000000, 0.000000, 0.036137}}},
        {"Rol01_Hand01Middle02FKCtrlJnt_R", {{-61.846611, 3.868438, 5.959052}, {1.000000, 1.000000, 1.000000}, {0.082454, 0.995782, -0.039721, 0.006401}}},
        {"Rol01_Hand01Middle03FKCtrlJnt_R", {{-31.543697, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Eye_R", {{-37.007999, 78.077209, 51.198513}, {1.000000, 1.000000, 1.000000}, {0.995089, 0.047223, -0.086901, 0.004124}}},
        {"Breast01RT101FKCtrlJnt_M_Scale", {{26.904409, -36.319008, -44.162155}, {1.000000, 1.000000, 1.000000}, {0.120786, 0.705796, 0.696714, -0.043040}}},
        {"Neck01HeadUpCtrlJnt_M_Scale", {{0.000000, 123.910492, 9.489252}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01MasterJnt_L", {{0.000000, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {0.696987, -0.706517, 0.026085, -0.119843}}},
        {"Rol01_Hand01Thumb01FKCtrlJnt_L", {{16.920595, -5.850204, 25.255711}, {1.000000, 1.000000, 1.000000}, {0.826005, 0.401014, -0.385566, 0.090787}}},
        {"Rol01_Hand01Middle04FKCtrlJnt_R", {{-20.268305, -0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Breast01LF101FKCtrlJnt_M_Scale", {{26.904409, 36.319008, -44.162155}, {1.000000, 1.000000, 1.000000}, {-0.043042, 0.696714, 0.705796, 0.120788}}},
        {"Rol01_Hand01Index02FKCtrlJnt_R", {{-62.060173, 5.828954, 20.878521}, {1.000000, 1.000000, 1.000000}, {0.017047, 0.999431, -0.019288, 0.021814}}},
        {"Rol01_Hand01Index03FKCtrlJnt_R", {{-28.276159, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Index04FKCtrlJnt_R", {{-18.842459, -0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Ring02FKCtrlJnt_R", {{-60.190514, 0.354814, -7.404934}, {1.000000, 1.000000, 1.000000}, {0.091191, 0.994891, -0.043322, -0.000418}}},
        {"Rol01_Hand01Ring03FKCtrlJnt_R", {{-29.537693, -0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Ring04FKCtrlJnt_R", {{-19.117027, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Ring02FKCtrlJnt_L", {{60.190514, 0.354814, -7.404934}, {1.000000, 1.000000, 1.000000}, {0.994891, -0.091191, -0.000418, 0.043322}}},
        {"Rol01_Hand01Ring03FKCtrlJnt_L", {{29.537693, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Ring04FKCtrlJnt_L", {{19.117027, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Thumb02FKCtrlJnt_L", {{20.364660, -0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {0.995840, -0.030879, 0.035645, -0.077959}}},
        {"Rol01_Hand01Middle02FKCtrlJnt_L", {{61.846611, 3.868438, 5.959052}, {1.000000, 1.000000, 1.000000}, {0.995782, -0.082454, 0.006401, 0.039721}}},
        {"Rol01_Hand01Middle03FKCtrlJnt_L", {{31.543697, -0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Middle04FKCtrlJnt_L", {{20.268305, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Thumb03FKCtrlJnt_L", {{24.680334, -0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Index02FKCtrlJnt_L", {{62.060173, 5.828954, 20.878521}, {1.000000, 1.000000, 1.000000}, {0.999431, -0.017047, 0.021814, 0.019288}}},
        {"Rol01_Hand01Little02FKCtrlJnt_L", {{58.057373, -2.451173, -20.710228}, {1.000000, 1.000000, 1.000000}, {0.991454, -0.127064, -0.010459, 0.027657}}},
        {"Rol01_Hand01Little03FKCtrlJnt_L", {{20.926340, -0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Little04FKCtrlJnt_L", {{18.014015, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {0.999347, 0.000000, 0.000000, 0.036137}}},
        {"Rol01_Hand01Index03FKCtrlJnt_L", {{28.276159, 0.000000, 0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
        {"Rol01_Hand01Index04FKCtrlJnt_L", {{18.842459, 0.000000, -0.000000}, {1.000000, 1.000000, 1.000000}, {1.000000, 0.000000, 0.000000, 0.000000}}},
    };

    SoulPose soulpose;
    soulpose.transforms.resize(sk.joints.size());
    for(size_t i = 0; i < sk.joints.size(); i++) {
        auto it = posedict.find(sk.joints[i].name);
        
        assert(it != posedict.end());

        if(it != posedict.end()) {
            auto& item = it->second;
            soulpose.transforms[i].translation = item.t;
            soulpose.transforms[i].scale = item.s;
            soulpose.transforms[i].rotation = item.q;
        }
    }
    return soulpose;
}

static void generateIBM(SoulScene const& scene) {
    for(auto& mesh: scene.skmeshes) {
        for(auto& joint : mesh->skeleton.joints) {
            joint.inverseBindposeMatrix = glm::inverse(joint.debugMatrixGlobal);
        }
    }
}

static void applySkin(SoulScene const& scene) {
    for(auto& pmesh: scene.skmeshes) {
        auto& mesh = *pmesh;
        printf("apply skin:%s\n", mesh.name.c_str());
        for(size_t i = 0; i < mesh.vertices.size(); i++) {

            // vertices
            glm::vec3& oldv = mesh.vertices[i];
            glm::vec4 v = glm::vec4(oldv.x, oldv.y, oldv.z, 1.0);
            glm::vec4 newv = glm::vec4(0.0);
            for(int j = 0; j < mesh.weightCounts[i]; j++) {
                uint32_t jointId = mesh.jointIds[i][j];
                float weight = mesh.weights[i][j];
                newv += weight * mesh.skeleton.joints[jointId].debugMatrixGlobal * mesh.skeleton.joints[jointId].inverseBindposeMatrix * v;
            }
            if (mesh.weightCounts[i] != 0) {
                oldv =  glm::vec3(newv);
            }
        }
    }
}

static void copyToJointTransform(SoulScene const& scene) {
    for(auto& mesh: scene.skmeshes) {
        for(auto& joint : mesh->skeleton.joints) {
            auto node = scene.findNodeByName(joint.name);
            assert(node != nullptr);
            if (node != nullptr) {
                joint.debugMatrixGlobal = node->debugTransformGlobal;
            }
        }
    }
}

static void applyNodeTransform(SoulNode* node) {
    if (node->parent != nullptr) {
        node->debugTransformGlobal = node->parent->debugTransformGlobal * node->transform;
    } else {
        node->debugTransformGlobal = node->transform;
    }
    for(auto& child: node->children) {
        applyNodeTransform(child.get());
    }
}

static void replacePose(SoulScene const& scene, SoulSkeleton& sk, SoulPose const& tpose) {
    assert(tpose.transforms.size() == sk.joints.size());
    for(size_t i = 0; i < sk.joints.size(); i++) {
        std::string name = sk.joints[i].name;
        SoulNode* node = scene.findNodeByName(name).get();
        
        assert(node != nullptr);
        if (node != nullptr) {
            node->transform = tpose.transforms[i].toMatrix();
        }
    }
}

static void convertTposeImpl(SoulIK::SoulScene const& srcscene, SoulPose const& tpose) {

    SoulIK::SoulSkeletonMesh& srcskm = *srcscene.skmeshes[0];

    replacePose(srcscene, srcskm.skeleton, tpose);
    applyNodeTransform(srcscene.rootNode.get());

    printf("node treeG");
    IKRigUtils::debugPrintNodeTree(srcscene.rootNode.get());

    copyToJointTransform(srcscene);
    applySkin(srcscene);
    generateIBM(srcscene);

    for(auto& skm : srcscene.skmeshes) {
        skm->calcNormal();
    }
}


static std::string getModelPath() {
    std::string file_path = __FILE__;
    
    #ifdef _WIN64
        std::string dir_path = file_path.substr(0, file_path.rfind("\\"));
        std::string model_path = dir_path + "\\..\\..\\model\\";
    #else
        std::string dir_path = file_path.substr(0, file_path.rfind("/"));
        std::string model_path = dir_path + "/../../model/";
    #endif

    return model_path;
}

void SoulIK::convertToTPose() {
    std::string modelPath = getModelPath();
    std::string inputfile = modelPath + "3D_Avatar2_Rig_0723.fbx";
    std::string outputfile =  modelPath + "3D_Avatar2_Rig_0723_out1.fbx";

    SoulIK::FBXRW fbxrw;
    fbxrw.readSkeletonMesh(inputfile);

    SoulIK::SoulScene& srcscene = *fbxrw.getSoulScene();
    SoulIK::SoulSkeletonMesh& srcskm = *srcscene.skmeshes[0];
    SoulPose tpose = getMetaTPoseSoulPose(srcskm.skeleton);

    convertTposeImpl(srcscene, tpose);

    // replacePose(srcscene, srcskm.skeleton, tpose);
    // applyNodeTransform(srcscene.rootNode.get());
    // applyJointTransform(srcscene);

    fbxrw.writeSkeletonMesh(outputfile);
}


void SoulIK::readAndWriteFBX(std::string const& inputfile, std::string const& outputfile) {
    // std::string modelPath = getModelPath();
    // std::string inputfile = modelPath + "3D_Avatar2_Rig_0723.fbx";
    // std::string outputfile =  modelPath + "3D_Avatar2_Rig_0723_out1.fbx";

    SoulIK::FBXRW fbxrw;
    fbxrw.readSkeletonMesh(inputfile);
    fbxrw.writeSkeletonMesh(outputfile);
}


void testMetaFBX() {
    std::string modelPath = getModelPath();
    std::string metaAFile = modelPath + "3D_Avatar2_Rig_0723.fbx";
    std::string metaTFile = modelPath + "3D_Avatar2_Rig_0723_tpose1.fbx";

    SoulIK::FBXRW fbxapose, fbxtpose;
    fbxapose.readSkeletonMesh(metaAFile);
    fbxtpose.readSkeletonMesh(metaTFile);


    SoulIK::SoulScene& ascene = *fbxapose.getSoulScene();
    SoulIK::SoulScene& tscene = *fbxtpose.getSoulScene();
    SoulIK::SoulSkeletonMesh& askm = *ascene.skmeshes[7];
    SoulIK::SoulSkeletonMesh& tskm = *tscene.skmeshes[7];


    IKRigUtils::debugPrintSkeletonTreeTransform(tscene, tskm);

    // // print node tree
    // IKRigUtils::debugPrintNodePose(ascene.rootNode.get());
    // IKRigUtils::debugPrintNodePose(tscene.rootNode.get());


    // IKRigUtils::debugPrintSkeletonTreeIBM(askm.skeleton);
    // IKRigUtils::debugPrintSkeletonTreeIBM(tskm.skeleton);

    // // save obj file
    // ObjRW objrw;
    // objrw.writeMesh(askm, modelPath + "a.obj");
    // objrw.writeMesh(tskm, modelPath + "t.obj");

    printf("done");

}

void SoulIK::testProject() {

}


